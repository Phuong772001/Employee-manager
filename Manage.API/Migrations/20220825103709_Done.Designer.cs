// <auto-generated />
using System;
using Manage.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Manage.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220825103709_Done")]
    partial class Done
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Manage.Model.Models.HuAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hu_allowance");
                });

            modelBuilder.Entity("Manage.Model.Models.HuBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hu_bank");
                });

            modelBuilder.Entity("Manage.Model.Models.HuBankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<int>("BankId")
                        .HasColumnType("int")
                        .HasColumnName("bank_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BankId" }, "IX_hu_bank_branch_bank_id");

                    b.ToTable("hu_bank_branch");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<double?>("Money")
                        .HasColumnType("float")
                        .HasColumnName("money");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<int?>("NumberOfMonth")
                        .HasColumnType("int")
                        .HasColumnName("number_of_month");

                    b.HasKey("Id");

                    b.ToTable("hu_contract");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContractAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<int?>("AllwanceId")
                        .HasColumnType("int")
                        .HasColumnName("allwance_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contract_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<double?>("Money")
                        .HasColumnType("float")
                        .HasColumnName("money");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AllwanceId" }, "IX_hu_Contract_allowance_allwance_id");

                    b.HasIndex(new[] { "ContractId" }, "IX_hu_Contract_allowance_contract_id");

                    b.ToTable("hu_Contract_allowance");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContractWelface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contract_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<double?>("Money")
                        .HasColumnType("float")
                        .HasColumnName("money");

                    b.Property<int?>("WelfaceId")
                        .HasColumnType("int")
                        .HasColumnName("welface_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractId" }, "IX_hu_contractual_benefits_contract_id");

                    b.HasIndex(new[] { "WelfaceId" }, "IX_hu_contractual_benefits_welface_id");

                    b.ToTable("hu_contractual_benefits");
                });

            modelBuilder.Entity("Manage.Model.Models.HuDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProvinceId" }, "IX_hu_district_province_id");

                    b.ToTable("hu_district");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("contract_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("DirectManager")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("direct_manager");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<int?>("ItimeId")
                        .HasColumnType("int")
                        .HasColumnName("itime_id");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime")
                        .HasColumnName("join_date");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastWorkingDay")
                        .HasColumnType("datetime")
                        .HasColumnName("last_working_day");

                    b.Property<int?>("LastWorkingId")
                        .HasColumnType("int")
                        .HasColumnName("last_working_id");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int")
                        .HasColumnName("org_id");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("title_id");

                    b.Property<bool?>("WorkStatus")
                        .HasColumnType("bit")
                        .HasColumnName("work_status");

                    b.Property<int?>("WorkingId")
                        .HasColumnType("int")
                        .HasColumnName("working_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContractId" }, "IX_hu_employee_contract_id");

                    b.HasIndex(new[] { "OrgId" }, "IX_hu_employee_org_id");

                    b.HasIndex(new[] { "TitleId" }, "IX_hu_employee_title_id");

                    b.ToTable("hu_employee");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeCv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BankBrankId")
                        .HasColumnType("int")
                        .HasColumnName("bank_brank_id");

                    b.Property<int?>("BankId")
                        .HasColumnType("int")
                        .HasColumnName("bank_id");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime")
                        .HasColumnName("birth_day");

                    b.Property<string>("BirthPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("birth_place");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<int?>("HospitalId")
                        .HasColumnType("int")
                        .HasColumnName("hospital_id");

                    b.Property<DateTime?>("IdDate")
                        .HasColumnType("datetime")
                        .HasColumnName("id_date");

                    b.Property<int?>("IdNo")
                        .HasColumnType("int")
                        .HasColumnName("id_no");

                    b.Property<string>("IdPlace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_place");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("marital_status");

                    b.Property<int?>("NationId")
                        .HasColumnType("int")
                        .HasColumnName("nation_id");

                    b.Property<string>("NavAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nav_address");

                    b.Property<string>("NavDistrict")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nav_district");

                    b.Property<string>("NavProvice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nav-provice");

                    b.Property<string>("NavWard")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nav_ward");

                    b.Property<string>("PerAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("per_address");

                    b.Property<string>("PerDistrict")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("per_district");

                    b.Property<string>("PerProvince")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("per_province");

                    b.Property<string>("PerWard")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("per_ward");

                    b.Property<string>("Religion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("religion");

                    b.Property<string>("Visa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("visa");

                    b.Property<DateTime?>("VisaDate")
                        .HasColumnType("datetime")
                        .HasColumnName("visa_date");

                    b.Property<string>("VisaPlace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("visa_place");

                    b.Property<string>("WorkEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_email");

                    b.HasKey("Id");

                    b.HasIndex("BankBrankId");

                    b.HasIndex("BankId");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[employee_id] IS NOT NULL");

                    b.HasIndex("HospitalId");

                    b.HasIndex("NationId");

                    b.ToTable("hu_employee_cv");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("FinsishDate")
                        .HasColumnType("datetime")
                        .HasColumnName("finsish_date");

                    b.Property<DateTime?>("FisrtDate")
                        .HasColumnType("datetime")
                        .HasColumnName("fisrt_date");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[employee_id] IS NOT NULL");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_hu_employee_education_employee_id")
                        .HasDatabaseName("IX_hu_employee_education_employee_id1");

                    b.ToTable("hu_employee_education");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("DeductFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("deduct_from");

                    b.Property<DateTime?>("DeductTo")
                        .HasColumnType("datetime")
                        .HasColumnName("deduct_to");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("full_name");

                    b.Property<int?>("IdNo")
                        .HasColumnType("int")
                        .HasColumnName("id_no");

                    b.Property<string>("IsDeduct")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("is_deduct");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Relation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("relation");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[employee_id] IS NOT NULL");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_hu_family_employee_id");

                    b.ToTable("hu_employee_family");
                });

            modelBuilder.Entity("Manage.Model.Models.HuHospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hu_hospital");
                });

            modelBuilder.Entity("Manage.Model.Models.HuNation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hu_nation");
                });

            modelBuilder.Entity("Manage.Model.Models.HuOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("order_number");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.HasKey("Id");

                    b.ToTable("hu_organization");
                });

            modelBuilder.Entity("Manage.Model.Models.HuOrgTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("title_id");

                    b.HasKey("Id");

                    b.ToTable("hu_org_title");
                });

            modelBuilder.Entity("Manage.Model.Models.HuProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("NationId")
                        .HasColumnType("int")
                        .HasColumnName("nation_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NationId" }, "IX_hu_province_nation_id");

                    b.ToTable("hu_province");
                });

            modelBuilder.Entity("Manage.Model.Models.HuSalaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("ContracId")
                        .HasColumnType("int")
                        .HasColumnName("contrac_id");

                    b.Property<int?>("ContractAllwanceId")
                        .HasColumnType("int")
                        .HasColumnName("contract_allwance_id");

                    b.Property<int?>("ContractWelfaceId")
                        .HasColumnType("int")
                        .HasColumnName("contract_welface_id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<double?>("Money")
                        .HasColumnType("float")
                        .HasColumnName("money");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.HasIndex(new[] { "ContracId" }, "IX_hu_salary_records_contrac_id");

                    b.HasIndex(new[] { "ContractAllwanceId" }, "IX_hu_salary_records_contract_allwance_id");

                    b.HasIndex(new[] { "ContractWelfaceId" }, "IX_hu_salary_records_contract_welface_id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_hu_salary_records_employee_id");

                    b.ToTable("hu_salary_records");
                });

            modelBuilder.Entity("Manage.Model.Models.HuSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("certificate");

                    b.Property<DateTime?>("CertificateFromDate")
                        .HasColumnType("datetime")
                        .HasColumnName("certificate_from_date");

                    b.Property<DateTime?>("CertificateTodate")
                        .HasColumnType("datetime")
                        .HasColumnName("certificate_todate");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime")
                        .HasColumnName("from_date");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Schools")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("schools");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime")
                        .HasColumnName("to_date");

                    b.Property<string>("TrainForm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("train_form");

                    b.Property<int?>("YearGra")
                        .HasColumnType("int")
                        .HasColumnName("year_gra");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique()
                        .HasFilter("[employee_id] IS NOT NULL");

                    b.ToTable("hu_shools");
                });

            modelBuilder.Entity("Manage.Model.Models.HuTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<int?>("GroupId")
                        .HasMaxLength(255)
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("hu_title");
                });

            modelBuilder.Entity("Manage.Model.Models.HuWard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("distric_id");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DistrictId" }, "IX_hu_ward_distric_id");

                    b.ToTable("hu_ward");
                });

            modelBuilder.Entity("Manage.Model.Models.HuWelface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hu_welface");
                });

            modelBuilder.Entity("Manage.Model.Models.OtherList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("activeflg");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TypeId" }, "IX_other_list_type_id");

                    b.ToTable("other_list");
                });

            modelBuilder.Entity("Manage.Model.Models.OtherListType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("other_list_type");
                });

            modelBuilder.Entity("Manage.Model.Models.SeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Activeflg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("created_time");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update_time");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_updated_by");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("access_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expired_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("refresh_token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Se_User");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Activeflg = "SuperActive",
                            Code = "UE00-1",
                            CreatedBy = "SuperAdmin",
                            CreatedTime = new DateTime(2022, 8, 25, 10, 37, 9, 281, DateTimeKind.Utc).AddTicks(5863),
                            LastUpdateTime = new DateTime(2022, 8, 25, 10, 37, 9, 281, DateTimeKind.Utc).AddTicks(5872),
                            LastUpdatedBy = "SuperAdmin",
                            Password = "831171121011146510010910511064495051",
                            Role = "SuperAdmin",
                            Username = "SuperAdmin",
                            expired_time = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Manage.Model.Models.HuBankBranch", b =>
                {
                    b.HasOne("Manage.Model.Models.HuBank", "Bank")
                        .WithMany("HuBankBranches")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContractAllowance", b =>
                {
                    b.HasOne("Manage.Model.Models.HuAllowance", "Allwance")
                        .WithMany("HuContractAllowances")
                        .HasForeignKey("AllwanceId");

                    b.HasOne("Manage.Model.Models.HuContract", "Contract")
                        .WithMany("HuContractAllowances")
                        .HasForeignKey("ContractId");

                    b.Navigation("Allwance");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContractWelface", b =>
                {
                    b.HasOne("Manage.Model.Models.HuContract", "Contract")
                        .WithMany("HuContractWelfaces")
                        .HasForeignKey("ContractId");

                    b.HasOne("Manage.Model.Models.HuWelface", "Welface")
                        .WithMany("HuContractWelfaces")
                        .HasForeignKey("WelfaceId");

                    b.Navigation("Contract");

                    b.Navigation("Welface");
                });

            modelBuilder.Entity("Manage.Model.Models.HuDistrict", b =>
                {
                    b.HasOne("Manage.Model.Models.HuProvince", "Province")
                        .WithMany("HuDistricts")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployee", b =>
                {
                    b.HasOne("Manage.Model.Models.HuContract", "Contract")
                        .WithMany("HuEmployees")
                        .HasForeignKey("ContractId");

                    b.HasOne("Manage.Model.Models.HuOrgTitle", "Org")
                        .WithMany("HuEmployees")
                        .HasForeignKey("OrgId");

                    b.HasOne("Manage.Model.Models.HuOrganization", "OrgNavigation")
                        .WithMany("HuEmployees")
                        .HasForeignKey("OrgId")
                        .HasConstraintName("FK_hu_employee_hu_organization");

                    b.HasOne("Manage.Model.Models.HuTitle", "Title")
                        .WithMany("HuEmployees")
                        .HasForeignKey("TitleId");

                    b.Navigation("Contract");

                    b.Navigation("Org");

                    b.Navigation("OrgNavigation");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeCv", b =>
                {
                    b.HasOne("Manage.Model.Models.HuBankBranch", "BankBrank")
                        .WithMany("HuEmployeeCvs")
                        .HasForeignKey("BankBrankId")
                        .HasConstraintName("FK_hu_employee_cv_hu_bank_branch");

                    b.HasOne("Manage.Model.Models.HuBank", "Bank")
                        .WithMany("HuEmployeeCvs")
                        .HasForeignKey("BankId")
                        .HasConstraintName("FK_hu_employee_cv_hu_bank");

                    b.HasOne("Manage.Model.Models.HuEmployee", "Employee")
                        .WithOne("HuEmployeeCvs")
                        .HasForeignKey("Manage.Model.Models.HuEmployeeCv", "EmployeeId")
                        .HasConstraintName("FK_hu_employee_cv_hu_employee");

                    b.HasOne("Manage.Model.Models.HuHospital", "Hospital")
                        .WithMany("HuEmployeeCvs")
                        .HasForeignKey("HospitalId")
                        .HasConstraintName("FK_hu_employee_cv_hu_hospital");

                    b.HasOne("Manage.Model.Models.HuNation", "Nation")
                        .WithMany("HuEmployeeCvs")
                        .HasForeignKey("NationId")
                        .HasConstraintName("FK_hu_employee_cv_hu_nation");

                    b.Navigation("Bank");

                    b.Navigation("BankBrank");

                    b.Navigation("Employee");

                    b.Navigation("Hospital");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeEducation", b =>
                {
                    b.HasOne("Manage.Model.Models.HuEmployee", "Employee")
                        .WithOne("HuEmployeeEducations")
                        .HasForeignKey("Manage.Model.Models.HuEmployeeEducation", "EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployeeFamily", b =>
                {
                    b.HasOne("Manage.Model.Models.HuEmployee", "Employee")
                        .WithOne("HuFamilies")
                        .HasForeignKey("Manage.Model.Models.HuEmployeeFamily", "EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Manage.Model.Models.HuProvince", b =>
                {
                    b.HasOne("Manage.Model.Models.HuNation", "Nation")
                        .WithMany("HuProvinces")
                        .HasForeignKey("NationId");

                    b.Navigation("Nation");
                });

            modelBuilder.Entity("Manage.Model.Models.HuSalaryRecord", b =>
                {
                    b.HasOne("Manage.Model.Models.HuContract", "Contrac")
                        .WithMany("HuSalaryRecords")
                        .HasForeignKey("ContracId");

                    b.HasOne("Manage.Model.Models.HuContractAllowance", "ContractAllwance")
                        .WithMany("HuSalaryRecords")
                        .HasForeignKey("ContractAllwanceId");

                    b.HasOne("Manage.Model.Models.HuWelface", "ContractWelface")
                        .WithMany("HuSalaryRecords")
                        .HasForeignKey("ContractWelfaceId");

                    b.HasOne("Manage.Model.Models.HuEmployee", "Employee")
                        .WithOne("HuSalaryRecords")
                        .HasForeignKey("Manage.Model.Models.HuSalaryRecord", "EmployeeId");

                    b.Navigation("Contrac");

                    b.Navigation("ContractAllwance");

                    b.Navigation("ContractWelface");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Manage.Model.Models.HuSchool", b =>
                {
                    b.HasOne("Manage.Model.Models.HuEmployee", "Employee")
                        .WithOne("HuShools")
                        .HasForeignKey("Manage.Model.Models.HuSchool", "EmployeeId")
                        .HasConstraintName("FK_hu_shools_hu_employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Manage.Model.Models.HuTitle", b =>
                {
                    b.HasOne("Manage.Model.Models.OtherList", "OtherLists")
                        .WithMany("Title")
                        .HasForeignKey("GroupId");

                    b.Navigation("OtherLists");
                });

            modelBuilder.Entity("Manage.Model.Models.HuWard", b =>
                {
                    b.HasOne("Manage.Model.Models.HuDistrict", "Distric")
                        .WithMany("HuWards")
                        .HasForeignKey("DistrictId");

                    b.Navigation("Distric");
                });

            modelBuilder.Entity("Manage.Model.Models.OtherList", b =>
                {
                    b.HasOne("Manage.Model.Models.OtherListType", "IdNavigation")
                        .WithMany("OtherList")
                        .HasForeignKey("TypeId");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Manage.Model.Models.HuAllowance", b =>
                {
                    b.Navigation("HuContractAllowances");
                });

            modelBuilder.Entity("Manage.Model.Models.HuBank", b =>
                {
                    b.Navigation("HuBankBranches");

                    b.Navigation("HuEmployeeCvs");
                });

            modelBuilder.Entity("Manage.Model.Models.HuBankBranch", b =>
                {
                    b.Navigation("HuEmployeeCvs");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContract", b =>
                {
                    b.Navigation("HuContractAllowances");

                    b.Navigation("HuContractWelfaces");

                    b.Navigation("HuEmployees");

                    b.Navigation("HuSalaryRecords");
                });

            modelBuilder.Entity("Manage.Model.Models.HuContractAllowance", b =>
                {
                    b.Navigation("HuSalaryRecords");
                });

            modelBuilder.Entity("Manage.Model.Models.HuDistrict", b =>
                {
                    b.Navigation("HuWards");
                });

            modelBuilder.Entity("Manage.Model.Models.HuEmployee", b =>
                {
                    b.Navigation("HuEmployeeCvs");

                    b.Navigation("HuEmployeeEducations");

                    b.Navigation("HuFamilies");

                    b.Navigation("HuSalaryRecords");

                    b.Navigation("HuShools");
                });

            modelBuilder.Entity("Manage.Model.Models.HuHospital", b =>
                {
                    b.Navigation("HuEmployeeCvs");
                });

            modelBuilder.Entity("Manage.Model.Models.HuNation", b =>
                {
                    b.Navigation("HuEmployeeCvs");

                    b.Navigation("HuProvinces");
                });

            modelBuilder.Entity("Manage.Model.Models.HuOrganization", b =>
                {
                    b.Navigation("HuEmployees");
                });

            modelBuilder.Entity("Manage.Model.Models.HuOrgTitle", b =>
                {
                    b.Navigation("HuEmployees");
                });

            modelBuilder.Entity("Manage.Model.Models.HuProvince", b =>
                {
                    b.Navigation("HuDistricts");
                });

            modelBuilder.Entity("Manage.Model.Models.HuTitle", b =>
                {
                    b.Navigation("HuEmployees");
                });

            modelBuilder.Entity("Manage.Model.Models.HuWelface", b =>
                {
                    b.Navigation("HuContractWelfaces");

                    b.Navigation("HuSalaryRecords");
                });

            modelBuilder.Entity("Manage.Model.Models.OtherList", b =>
                {
                    b.Navigation("Title");
                });

            modelBuilder.Entity("Manage.Model.Models.OtherListType", b =>
                {
                    b.Navigation("OtherList");
                });
#pragma warning restore 612, 618
        }
    }
}
